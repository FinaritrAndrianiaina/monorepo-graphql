# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type Mutation {
  createOneRecipe(data: RecipeCreateInput!): Recipe!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

enum NullsOrder {
  first
  last
}

type Query {
  findAll(cursor: RecipeWhereUniqueInput, distinct: [RecipeScalarFieldEnum!], orderBy: [RecipeOrderByWithRelationInput!], skip: Int, take: Int, where: RecipeWhereInput): [Recipe!]!
  recipe(where: RecipeWhereUniqueInput!): Recipe!
}

type Recipe {
  creationDate: DateTime!
  decription: String
  id: String!
  title: String!
}

input RecipeCreateInput {
  creationDate: DateTime
  decription: String
  id: String
  title: String!
}

input RecipeOrderByWithRelationInput {
  creationDate: SortOrder
  decription: SortOrderInput
  id: SortOrder
  title: SortOrder
}

enum RecipeScalarFieldEnum {
  creationDate
  decription
  id
  title
}

input RecipeWhereInput {
  AND: [RecipeWhereInput!]
  NOT: [RecipeWhereInput!]
  OR: [RecipeWhereInput!]
  creationDate: DateTimeFilter
  decription: StringNullableFilter
  id: StringFilter
  title: StringFilter
}

input RecipeWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}